{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,aAwB/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OAFAc,QAAQC,IAAKL,EAAOV,GAGhB,sBAAKgB,UAAU,kEAAf,UAEI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCNHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAcxC,OAPAC,qBAAW,WACN1B,EAASC,GAAW0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACtCjB,KAAMoB,EACNL,SAAS,SAEf,IAEIC,EDX0BK,CAAa5B,GAAjCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAErB,OACI,qCACA,mCAAMtB,EAAN,OAEA,sBAAKkB,UAAU,YAAf,UACCI,GAAW,oBAAIJ,UAAU,2DAAd,qBAEAL,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEKA,GADAA,EAAIC,cEbpBkB,EAAe,WAAM,MAGM/C,mBAAS,CAAC,cAHhB,mBAGvBgD,EAHuB,KAGXjD,EAHW,KAS9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQiD,EAAWrB,KAAK,SAAET,EAAU+B,GAAZ,OACZ,cAAC,EAAD,CAAwB/B,SAAUA,GAApBA,YCjBtCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.95d958a0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e )  => {\r\n        setInputValue(e.target.value)\r\n    }   \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length>2) {\r\n            setCategories(cats => [ inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=MFFmPMAbn1vIleLpEqCPJDUf8lM8uH6X`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    console.log( title, url )\r\n\r\n    return (\r\n        <div className='card animate__animated animate__backInRight animate__delay-0.5s'>\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n \r\n        <div className='card-grid'>\r\n        {loading && <h2 className='animate__animated animate__bounceOut animate__delay-0.5s'>Loading</h2>}\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem\r\n                        key={img.id} \r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport moduleName, { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n         getGifs( category ).then(imgs => setState({\r\n             data: imgs,\r\n             loading: false\r\n         }))\r\n    }, [] )\r\n\r\n    return state\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'HunterXHunter'] )\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( ( category, i ) => \r\n                        <GifGrid key={category} category={category}/> \r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}